name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:2.0.0-1

    env:
      NO_EMULATOR: 1
      NANO_MODEL: nanos
      DEBUG: 1

    steps:
      - uses: actions/checkout@v2

      - name: Get all git tags
        run: git fetch --prune --unshallow --tags

      - name: Build app
        run: |
          make clean
          make
      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: bin

  scan-build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:2.0.0-1

    env:
      NO_EMULATOR: 1
      NANO_MODEL: nanos

    steps:
      - uses: actions/checkout@v2

      - name: Get all git tags
        run: git fetch --prune --unshallow --tags

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  test-speculos:
    name: Run speculos tests
    needs: build
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/speculos:latest
      options: --entrypoint /bin/bash

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt update
          apt install -qy git netcat
          pip3 install ledgerblue

      - name: Download app binary
        uses: actions/download-artifact@v2
        with:
          name: app-debug
          path: bin

      - name: Run speculos in the background
        env:
          SEED: course grief vintage slim tell hospital car maze model style elegant kitchen state purpose matrix gas grid enable frown road goddess glove canyon key
        run: |
          /speculos/speculos.py --display headless --automation file:emulator_automation.json --seed "${SEED}" bin/app.elf 2>speculos.log &
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run speculos tests
        env:
          LEDGER_PROXY_ADDRESS: 127.0.0.1
          LEDGER_PROXY_PORT: 9999
        run: |
          python3 tests/unit_tests.py

      - name: Upload Speculos log
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: speculos-log
          path: speculos.log
